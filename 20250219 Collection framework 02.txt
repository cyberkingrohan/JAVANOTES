								Java Full Stack Development
									  19-02-2025
								Mr.Akash(NSA IT-POINT)   
===================================================================================================

=====================
Methods of ArrayList
=====================
1) add (Object obj )  ---> add object at end of the collection and return boolean
2) add(int index, Object) --> add object at given index
3) addAll (Collection c) ---> to add collection of objects at end of the collection
4) remove(Object obj)  ---> To remove given object and return boolean
5) remove(int index)   ----> to remove object based on given index and return remove element
6) get(int index)     --> to get object based on index
-> set(int index, E element)	: Replaces the element at a given index.
7) contains(Object obj)   ---> To check presense of the object
8)  clear( )  ---> to remove all objects from collection
9) isEmpty ( )  ---> to check collection si empty or not
10) retainAll(Collection c)  --> keep only common elements and remove remaining object
11) indexOf(Object obj) --> to get first occurence of given obj
12) lastIndexOf(Object obj)  ---> to get last occurance  of given object
13) set(int index, Object obj) ---> replace the object based on given index
14) iterator ( ) --> forward direction
15) listIterator ( ) --> forward & back
16)Collections.sort(ArrayList al);
17)subList(int fromIndex, int toIndex) : 	Returns a portion of the list as another list.
18)size()	: Returns the number of elements.

====================Methods=========================
package com.collectionframework;

import java.util.ArrayList;
import java.util.Collections;

public class ArrayListDemo {

	public static void main(String[] args) {

		ArrayList al = new ArrayList();
		ArrayList al2 = new ArrayList();

		al.add(10);
		al.add(20);
		al.add(5);
		al.add(35);
		System.out.println(al.add(100));

		al2.add(20);
		al2.add("aman");
		al2.add("raju");
		System.out.println(al);
		al.add(1, 30);
		System.out.println(al);
		al.add(al2);
		System.out.println(al);
		System.out.println(al.remove(al2));
		System.out.println(al);
		System.out.println(al.remove(0));
		System.out.println(al);

		Object object = al.get(0);
		System.out.println(object);

		System.out.println(al.contains(40));
//		al.clear();
//		System.out.println(al);

		System.out.println(al.isEmpty());

		// System.out.println(al.retainAll(al2));
		System.out.println(al);
		System.out.println(al.indexOf(20));
		System.out.println(al.lastIndexOf(20));
		al2.set(0, "akash");
		System.out.println(al2);

		Collections.sort(al);
		System.out.println(al);

	}
}
=========================================

public class Student {

	int id;
	String name;

	public Student(int id, String name) {
		this.id = id;
		this.name = name;
	}

	public String toString() {
		return id + " - " + name;
	}
}


public class Demo {

	public static void main(String[] args) {

		ArrayList<Student> al = new ArrayList<>();

		al.add(new Student(1, "Raju"));
		al.add(new Student(2, "John"));
		al.add(new Student(3, "Smith"));
		al.add(new Student(4, "Rani"));

		ListIterator<Student> li = al.listIterator();

		while (li.hasNext()) {
			System.out.println(li.next());
		}

		System.out.println("=====================");

		while (li.hasPrevious()) {
			System.out.println(li.previous());
		}
	}
	
}
===============XXX==============XX==============
package com.nsa.list;

public class Employee {

	int id;
	String name;

	//constructors
	// getter setter
	// to string

}
---------
package com.nsa.list;

import java.util.ArrayList;

public class TestEmp {

	public static void main(String[] args) {

		// add no of employee into arraylist

		Employee e1 = new Employee(10, "Akash");
		Employee e2 = new Employee(12, "Vikas");

		Employee e3 = new Employee();
		e3.setId(13);
		e3.setName("golu");

		Employee e4 = new Employee();
		e4.setId(14);
		e4.setName("molu");

		ArrayList al = new ArrayList();
		al.add(e1);
		al.add(e2);
		al.add(e3);
		al.add(e4);

		for (Object obj : al) {

			Employee emp = (Employee) obj;
			System.out.println(emp);
			System.out.println(emp.getId() + " : " + emp.getName());

		}

	}
}
--------------
package com.nsa.list;

import java.util.ArrayList;

public class TestEmp2 {

	public static void main(String[] args) {

		// add no of employee into arraylist

		ArrayList<Employee> al = new ArrayList();
		al.add(new Employee(10, "Akash"));
		al.add(new Employee(12, "Vikas"));
		al.add(new Employee(13, "golu"));
		al.add(new Employee(14, "molu"));

		System.out.println(al);
		
		for (Employee emp : al) {

			System.out.println(emp);
			System.out.println(emp.getId() + " : " + emp.getName());

		}

	}
}


===============XXX==============XX==============
package com.nsa.list;

public class Product {

	int prodNo;
	String prodName;
	double prodPrice;

	//constructs
	//getter and setter
	//toString

}

-----------
package com.nsa.list;

import java.util.ArrayList;

public class TestProduct {

	// Design a method to return the list of products

	public ArrayList<Product> getProdList() {

		ArrayList<Product> prodList = new ArrayList();

		prodList.add(new Product(123, "mobile", 123.123));
		prodList.add(new Product(456, "laptop", 741.23));
		prodList.add(new Product(789, "mouse", 965.3));

		return prodList;
	}

	public static void main(String[] args) {

		// print the list of products
		TestProduct test = new TestProduct();
		ArrayList<Product> listOfprod = test.getProdList();

		for (Product prod : listOfprod) {

			System.out.println(prod);
		}
	}
}


======================================================================
package com.nsait.akash.collectionworkshop;

import java.util.ArrayList;

public class ArrayListRetrun {

//	Design the method to return arraylist to method

	public ArrayList getList() {
        
		ArrayList al = new ArrayList<>();

		al.add(10);
		al.add(20);
		al.add(30);
		return al;
	}

	public static void main(String[] args) {
		ArrayListRetrun arrList = new ArrayListRetrun();
		ArrayList list = arrList.getList();

		for (Object o : list) {
			System.out.println(o);
		}
	}
}
======================================================================


1) ArrayList class is not recommended for insertions because it has to perform lot of shiftings

2) ArrayList class is recommended for retriveal operations because it will retrieve based on index directley

3) internal data structure is growable array

4) duplicate are allowed

5) homegeneuous & hetereogenious data supported

Note : 
	How to get the synchronized version of ArrayList ? 
		By default, all the methods in array list are non-synchronized but we can get the synchronized version of arraylist by using collection class synchronized list method.
		
	Example â€“ ArrayList al= new ArrayList(); //this is non-synchronized
	List list=Collections.synchronizedList(al); // this is synchronize
	
